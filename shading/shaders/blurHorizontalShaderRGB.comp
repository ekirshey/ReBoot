#version 430
 
uniform sampler2D readTexture;
uniform layout(rgba16) writeonly image2D writeTexture;
uniform float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);
layout (local_size_x = 16, local_size_y = 16) in;
 
void main() {
	
	ivec2 ID = ivec2(gl_GlobalInvocationID.xy); 
    ivec2 size = imageSize(writeTexture);
    vec2 texCoords = vec2(float(ID.x)/float(size.x),float(ID.y)/float(size.y));
	
	float tex_offset_x = 1.0 / float(size.x); // gets size of single texel
	vec3 result = texture(readTexture, texCoords).rgb * weight[0]; // current fragment's contribution
	
	for(int i = 1; i < 5; ++i)
	{
		result += texture(readTexture, texCoords + vec2(tex_offset_x * float(i), 0.0)).rgb * weight[i];
		result += texture(readTexture, texCoords + vec2(-tex_offset_x * float(i), 0.0)).rgb * weight[i];
	}
	imageStore(writeTexture, ID, vec4(result.rgb, 1.0));
}